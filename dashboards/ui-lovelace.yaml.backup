title: Home
views:
- title: Overview
  path: overview
  icon: mdi:home
  theme: default
  cards:
  - type: custom:bubble-card
    card_type: button
    button_type: slider
    entity: light.living_room
    name: Living Room
    icon: mdi:sofa
    show_state: true
    show_last_changed: false
    show_attribute: true
    attribute: brightness
    slider_live_update: true
    allow_light_slider_to_0: false
    card_layout: large
    sub_button:
    - entity: binary_sensor.front_door_window_door_is_open
      icon: mdi:door-closed
      name: Door
      show_state: false
      show_background: true
      show_icon: true
      styles: |-
        .bubble-sub-button {
          {% if is_state('binary_sensor.front_door_window_door_is_open', 'on') %}
            background-color: rgba(239, 83, 80, 0.3) !important;
          {% else %}
            background-color: rgba(76, 175, 80, 0.3) !important;
          {% endif %}
        }
        .bubble-sub-button-icon {
          --mdc-icon-size: 26px;
        }
        ha-icon {
          {% if is_state('binary_sensor.front_door_window_door_is_open', 'on') %}
            --card-mod-icon: mdi:door-open;
            color: #ef5350 !important;
          {% else %}
            --card-mod-icon: mdi:door-closed;
            color: #43a047 !important;
          {% endif %}
        }
    - icon: mdi:dots-horizontal
      show_background: false
      tap_action:
        action: navigate
        navigation_path: '#living-room-lights'
    button_action:
      tap_action:
        action: toggle
      hold_action:
        action: none
    tap_action:
      action: toggle
    hold_action:
      action: navigate
      navigation_path: '#living-room-lights'
  - type: custom:bubble-card
    card_type: button
    button_type: state
    entity: cover.garage_door
    name: Garage
    icon: mdi:garage-variant
    show_state: true
    show_last_changed: true
    styles: |-
      ha-card {
        {% if is_state('cover.garage_door', 'open') %}
          --bubble-button-background-color: rgba(41, 182, 246, 0.22) !important;
          --bubble-button-icon-background-color: rgba(25, 118, 210, 0.65) !important;
        {% else %}
          --bubble-button-background-color: rgba(120, 144, 156, 0.20) !important;
          --bubble-button-icon-background-color: rgba(55, 71, 79, 0.55) !important;
        {% endif %}
      }
      .bubble-icon {
        {% if is_state('cover.garage_door', 'open') %}
          color: #BBDEFB !important;
        {% else %}
          color: #ECEFF1 !important;
        {% endif %}
      }
      .bubble-name,
      .bubble-state {
        {% if is_state('cover.garage_door', 'open') %}
          color: #0D47A1 !important;
        {% else %}
          color: #37474F !important;
        {% endif %}
      }
    sub_button:
    - icon: mdi:arrow-up-bold-circle
      name: Garage Door
      show_background: true
      tap_action:
        action: call-service
        service: cover.toggle
        service_data:
          entity_id: cover.garage_door
      styles: |-
        .bubble-sub-button-icon {
          {% if is_state('cover.garage_door', 'open') %}
            transform: rotate(180deg);
            color: #1565C0 !important;
          {% else %}
            transform: rotate(0deg);
            color: #455A64 !important;
          {% endif %}
          --mdc-icon-size: 26px;
        }
        .bubble-sub-button-name {
          {% if is_state('cover.garage_door', 'open') %}
            color: #0D47A1 !important;
          {% else %}
            color: #37474F !important;
          {% endif %}
          font-size: 12px;
        }
        .bubble-sub-button {
          {% if is_state('cover.garage_door', 'open') %}
            background-color: rgba(25, 118, 210, 0.22) !important;
          {% else %}
            background-color: rgba(120, 144, 156, 0.20) !important;
          {% endif %}
          border-radius: 16px;
        }
    button_action:
      tap_action:
        action: more-info
      double_tap_action:
        action: none
      hold_action:
        action: more-info
    tap_action:
      action: more-info
    hold_action:
      action: more-info
  - type: custom:bubble-card
    card_type: button
    button_type: state
    entity: climate.my_ecobee
    name: Dining Room
    icon: mdi:home-thermometer
    show_state: false
    show_attribute: false
    show_last_changed: false
    styles: |-
      ha-card {
        --bubble-button-main-background-color: rgba(120, 144, 156, 0.22) !important;
        --bubble-button-background-color: rgba(120, 144, 156, 0.22) !important;
        --bubble-button-icon-background-color: rgba(69, 90, 100, 0.60) !important;
      }
      {% set hvac_state = states('climate.my_ecobee') %}
      {% set hvac_action = state_attr('climate.my_ecobee', 'hvac_action') %}
      .bubble-icon {
        {% if hvac_action == 'heating' %}
          color: #FFCDD2 !important;
        {% elif hvac_action == 'cooling' %}
          color: #BBDEFB !important;
        {% else %}
          color: #ECEFF1 !important;
        {% endif %}
      }
      .bubble-name {
        {% if hvac_action == 'heating' %}
          color: #B71C1C !important;
        {% elif hvac_action == 'cooling' %}
          color: #0D47A1 !important;
        {% else %}
          color: #37474F !important;
        {% endif %}
      }
      .bubble-state {
        font-size: 12px;
        font-weight: 600;
      }
      ${(() => {
        const hvac = hass.states['climate.my_ecobee'];
        if (!hvac) { return ''; }
        const modeRaw = hvac.state;
        const modeText = (!modeRaw || ['unknown', 'unavailable', 'none'].includes(modeRaw))
          ? 'Unknown'
          : modeRaw.replace(/_/g, ' ').replace(/\b\w/g, (c) => c.toUpperCase());
        const tempAttr = hvac.attributes?.current_temperature;
        const tempText = typeof tempAttr === 'number' ? `${Math.round(tempAttr)}°F` : 'N/A';
        const humidityAttr = hvac.attributes?.current_humidity;
        const humidityText = typeof humidityAttr === 'number' ? `${Math.round(humidityAttr)}%` : 'N/A';
        const composed = `${modeText} • ${tempText} • ${humidityText}`;
        const currentCard = typeof card !== 'undefined' ? card : this;
        const haCard = currentCard?.closest('ha-card');
        const setBubbleColors = (bg, iconBg) => {
          if (!haCard) { return; }
          haCard.style.setProperty('--bubble-button-main-background-color', bg);
          haCard.style.setProperty('--bubble-button-background-color', bg);
          haCard.style.setProperty('--bubble-button-icon-background-color', iconBg);
        };
        const blendColor = (temp) => {
          const clamp = (value) => Math.min(Math.max(value, 0), 1);
          const ratio = clamp((temp - 30) / 70);
          const lerp = (start, end) => Math.round(start + (end - start) * ratio);
          const r = lerp(30, 211);
          const g = lerp(136, 47);
          const b = lerp(229, 47);
          return {
            background: `rgba(${r}, ${g}, ${b}, 0.55)`,
            icon: `rgba(${r}, ${g}, ${b}, 0.75)`
          };
        };
        const hvacAction = hvac.attributes?.hvac_action;
        if (hvacAction === 'heating') {
          setBubbleColors('rgba(239, 154, 154, 0.55)', 'rgba(211, 47, 47, 0.75)');
        } else if (hvacAction === 'cooling') {
          setBubbleColors('rgba(144, 202, 249, 0.55)', 'rgba(30, 136, 229, 0.75)');
        } else {
          const tempValue = typeof tempAttr === 'number' ? tempAttr : 65;
          const colors = blendColor(tempValue);
          setBubbleColors(colors.background, colors.icon);
        }
        const stateEl = currentCard?.querySelector('.bubble-state');
        if (stateEl) {
          stateEl.style.color = hvac.attributes?.hvac_action === 'heating'
            ? '#B71C1C'
            : hvac.attributes?.hvac_action === 'cooling'
              ? '#0D47A1'
              : '#455A64';
          stateEl.innerText = composed;
        }
        return '';
      })()}
    sub_button:
    - icon: mdi:thermostat
      name: Thermostat
      show_background: true
      show_name: false
      tap_action:
        action: navigate
        navigation_path: '#dining-room-thermostat'
      styles: |-
        {% set hvac_action = state_attr('climate.my_ecobee', 'hvac_action') %}
        .bubble-sub-button {
          {% if hvac_action == 'heating' %}
            background-color: rgba(229, 115, 115, 0.28) !important;
          {% elif hvac_action == 'cooling' %}
            background-color: rgba(100, 181, 246, 0.28) !important;
          {% else %}
            background-color: rgba(120, 144, 156, 0.20) !important;
          {% endif %}
          border-radius: 16px;
        }
        .bubble-sub-button-icon {
          {% if hvac_action == 'heating' %}
            color: #C62828 !important;
          {% elif hvac_action == 'cooling' %}
            color: #1565C0 !important;
          {% else %}
            color: #546E7A !important;
          {% endif %}
          --mdc-icon-size: 26px;
        }
        .bubble-sub-button-name {
          {% if hvac_action == 'heating' %}
            color: #B71C1C !important;
          {% elif hvac_action == 'cooling' %}
            color: #0D47A1 !important;
          {% else %}
            color: #37474F !important;
          {% endif %}
          font-size: 12px;
        }
    button_action:
      tap_action:
        action: more-info
      double_tap_action:
        action: none
      hold_action:
        action: more-info
    tap_action:
      action: more-info
    hold_action:
      action: more-info
  - type: custom:bubble-card
    card_type: button
    button_type: state
    entity: sensor.server_closet_air_temperature
    name: Server Closet
    icon: mdi:server
    show_state: false
    show_attribute: false
    show_last_changed: false
    styles: |-
      /* Base styles */
      .bubble-icon {
        color: rgba(238, 238, 238, 0.95) !important;
      }
      .bubble-name {
        color: #1a1a1a !important;
      }
      .bubble-state {
        font-size: 12px;
        font-weight: 600;
        color: #1a1a1a !important;
        position: relative;
      }
      .bubble-action,
      .bubble-button,
      .bubble-wrapper,
      .bubble-action-enabled {
        pointer-events: none !important;
      }
    card_mod:
      style: |
        (() => {
          const updateColors = () => {
            const card = this;
            if (!window.hass) return;

            // Get sensor values
            const tempState = window.hass.states['sensor.server_closet_air_temperature'];
            const humidityState = window.hass.states['sensor.server_closet_humidity'];

            // Process temperature
            let tempValue = 65.0;
            let tempLabel = 'N/A';
            if (tempState && tempState.state &&
                !['unknown', 'unavailable', ''].includes(tempState.state)) {
              tempValue = parseFloat(tempState.state) || 65.0;
              tempLabel = Math.round(tempValue) + '°F';
            }

            // Process humidity
            let humidityLabel = 'N/A';
            if (humidityState && humidityState.state &&
                !['unknown', 'unavailable', ''].includes(humidityState.state)) {
              humidityLabel = Math.round(parseFloat(humidityState.state) || 0) + '%';
            }

            // Clamp temperature to range
            tempValue = Math.max(30, Math.min(100, tempValue));

            // Calculate color gradient (30°F = blue, 100°F = red)
            const ratio = (tempValue - 30.0) / 70.0;
            const red = Math.round(30 + (181 * ratio));
            const green = Math.round(136 + ((47 - 136) * ratio));
            const blue = Math.round(229 + ((47 - 229) * ratio));

            const backgroundColor = `rgba(${red}, ${green}, ${blue}, 0.62)`;
            const iconBackgroundColor = `rgba(${red}, ${green}, ${blue}, 0.80)`;

            // Update CSS custom properties
            card.style.setProperty('--bubble-main-background-color', backgroundColor);
            card.style.setProperty('--bubble-secondary-background-color', backgroundColor);
            card.style.setProperty('--bubble-button-main-background-color', backgroundColor);
            card.style.setProperty('--bubble-button-background-color', backgroundColor);
            card.style.setProperty('--bubble-button-icon-background-color', iconBackgroundColor);

            // Update background elements
            const background = card.querySelector('.bubble-background');
            if (background) {
              background.style.backgroundColor = backgroundColor;
              background.style.opacity = '1';
            }

            const button = card.querySelector('.bubble-button');
            if (button) {
              button.style.backgroundColor = backgroundColor;
            }

            const iconContainer = card.querySelector('.bubble-icon-container');
            if (iconContainer) {
              iconContainer.style.backgroundColor = iconBackgroundColor;
            }

            // Update state text
            const stateElement = card.querySelector('.bubble-state');
            if (stateElement) {
              stateElement.textContent = `Temp ${tempLabel} • Humidity ${humidityLabel}`;
            }
          };

          // Initial update
          updateColors();

          // Update when state changes
          if (window.hass) {
            const originalUpdate = this.hass;
            Object.defineProperty(this, 'hass', {
              set: function(value) {
                originalUpdate = value;
                setTimeout(updateColors, 0);
              },
              get: function() {
                return originalUpdate;
              }
            });
          }

          // Periodic update as fallback
          setInterval(updateColors, 5000);
        })();
    sub_button: []
    button_action:
      tap_action:
        action: none
      hold_action:
        action: none
      double_tap_action:
        action: none
    tap_action:
      action: none
    hold_action:
      action: none
  - type: custom:bubble-card
    card_type: button
    button_type: slider
    entity: light.master_bedroom
    name: Main Bedroom
    icon: mdi:bed
    show_state: true
    show_last_changed: false
    show_attribute: true
    attribute: brightness
    slider_live_update: true
    allow_light_slider_to_0: false
    card_layout: large
    sub_button:
    - icon: mdi:dots-horizontal
      show_background: false
      tap_action:
        action: navigate
        navigation_path: '#main-bedroom-lights'
    button_action:
      tap_action:
        action: toggle
      hold_action:
        action: none
    tap_action:
      action: toggle
    hold_action:
      action: navigate
      navigation_path: '#main-bedroom-lights'
  - type: vertical-stack
    cards:
    # Living Room: Single popup with navigation sub-buttons
    - type: custom:bubble-card
      card_type: pop-up
      hash: '#living-room-lights'
      name: Living Room Lights
      icon: mdi:sofa
      back_open: false
      close_by_clicking_outside: true
      bg_opacity: '88'
      bg_blur: '14'
      margin_top_mobile: '0'
      margin_top_desktop: '0'
      width_desktop: 540px
      is_sidebar_hidden: false
      auto_close: 60000
      show_header: true
      sub_button:
      - icon: mdi:tune
        name: Control
        tap_action:
          action: navigate
          navigation_path: '#living-room-lights'
      - icon: mdi:palette
        name: Scenes
        tap_action:
          action: navigate
          navigation_path: '#living-room-lights-scenes'
      - icon: mdi:lightbulb
        name: Lights
        tap_action:
          action: navigate
          navigation_path: '#living-room-lights-lights'
    # Room Control Section (default view)
    - type: custom:bubble-card
      card_type: separator
      name: Room Control
      icon: mdi:lightbulb-group
    - type: custom:bubble-card
      card_type: button
      button_type: slider
      entity: light.living_room
      name: All Lights
      icon: mdi:lightbulb-group
      show_state: true
      show_attribute: true
      attribute: brightness
      slider_live_update: true
      allow_light_slider_to_0: true
      sub_button:
      - entity: light.living_room
        icon: mdi:palette
        name: Color
        tap_action:
          action: more-info
      button_action:
        tap_action:
          action: toggle
        hold_action:
          action: none
  # Living Room: Scenes popup
  - type: vertical-stack
    cards:
    - type: custom:bubble-card
      card_type: pop-up
      hash: '#living-room-lights-scenes'
      name: Living Room Lights
      icon: mdi:sofa
      back_open: false
      close_by_clicking_outside: true
      bg_opacity: '88'
      bg_blur: '14'
      margin_top_mobile: '0'
      margin_top_desktop: '0'
      width_desktop: 540px
      is_sidebar_hidden: false
      auto_close: 60000
      show_header: true
      sub_button:
      - icon: mdi:tune
        name: Control
        tap_action:
          action: navigate
          navigation_path: '#living-room-lights'
      - icon: mdi:palette
        name: Scenes
        tap_action:
          action: navigate
          navigation_path: '#living-room-lights-scenes'
      - icon: mdi:lightbulb
        name: Lights
        tap_action:
          action: navigate
          navigation_path: '#living-room-lights-lights'
    - type: custom:bubble-card
      card_type: separator
      name: Hue Scenes
      icon: mdi:palette
    - type: custom:auto-entities
      card:
        type: grid
        columns: 4
        square: false
      card_param: cards
      filter:
        template: |-
          {% set scenes = states.scene | selectattr('entity_id', 'match', 'scene.living_room_') | list %}
          {% for scene in scenes | sort(attribute='attributes.friendly_name') %}
            {%- set scene_name = scene.attributes.friendly_name | replace('Living Room ', '') | replace('Living room ', '') -%}
            {%- set icon_map = {
              'USA': 'mdi:flag',
              'Read': 'mdi:book-open',
              'Ruby glow': 'mdi:fire',
              'Dimmed': 'mdi:brightness-3',
              'Bright': 'mdi:brightness-7',
              'Concentrate': 'mdi:target',
              'Energize': 'mdi:lightning-bolt',
              'Relax': 'mdi:spa',
              'Nightlight': 'mdi:weather-night',
              'Halloween': 'mdi:halloween',
              'Xmas': 'mdi:pine-tree',
              'Arctic aurora': 'mdi:aurora',
              'Spring blossom': 'mdi:flower',
              'Tropical twilight': 'mdi:palm-tree',
              'Savanna sunset': 'mdi:weather-sunset',
              'Nebula': 'mdi:creation',
              'Rainbow': 'mdi:looks',
              'Ibiza': 'mdi:party-popper',
              'Sweden': 'mdi:flag',
              'Sunday morning': 'mdi:coffee',
              'Champagne': 'mdi:glass-flute',
              'Lavender': 'mdi:flower-outline',
              'Peach': 'mdi:fruit-cherries',
              'Circle': 'mdi:circle',
              'Blue white': 'mdi:snowflake'
            } -%}
            {%- set icon = icon_map.get(scene_name, 'mdi:palette') -%}
            {
              "type": "custom:bubble-card",
              "card_type": "button",
              "button_type": "name",
              "name": "{{ scene_name }}",
              "icon": "{{ icon }}",
              "entity": "{{ scene.entity_id }}",
              "card_layout": "normal",
              "styles": "ha-card { height: 36px !important; } .bubble-container { height: 36px !important; } .bubble-name { font-size: 11px !important; } .bubble-icon-container { min-width: 28px !important; min-height: 28px !important; margin: 4px !important; } .bubble-icon { --mdc-icon-size: 18px !important; }",
              "button_action": {
                "tap_action": {
                  "action": "call-service",
                  "service": "scene.turn_on",
                  "service_data": {"entity_id": "{{ scene.entity_id }}"}
                }
              }
            }{%- if not loop.last -%},{%- endif -%}
          {% endfor %}
  # Living Room: Individual Lights popup
  - type: vertical-stack
    cards:
    - type: custom:bubble-card
      card_type: pop-up
      hash: '#living-room-lights-lights'
      name: Living Room Lights
      icon: mdi:sofa
      back_open: false
      close_by_clicking_outside: true
      bg_opacity: '88'
      bg_blur: '14'
      margin_top_mobile: '0'
      margin_top_desktop: '0'
      width_desktop: 540px
      is_sidebar_hidden: false
      auto_close: 60000
      show_header: true
      sub_button:
      - icon: mdi:tune
        name: Control
        tap_action:
          action: navigate
          navigation_path: '#living-room-lights'
      - icon: mdi:palette
        name: Scenes
        tap_action:
          action: navigate
          navigation_path: '#living-room-lights-scenes'
      - icon: mdi:lightbulb
        name: Lights
        tap_action:
          action: navigate
          navigation_path: '#living-room-lights-lights'
    - type: custom:bubble-card
      card_type: separator
      name: Individual Lights
      icon: mdi:lightbulb
    - type: custom:auto-entities
      card:
        type: vertical-stack
      card_param: cards
      filter:
        include:
        - area: Living Room
          domain: light
          options:
            type: custom:bubble-card
            card_type: button
            button_type: slider
            show_state: true
            show_attribute: true
            attribute: brightness
            slider_live_update: true
            allow_light_slider_to_0: true
            sub_button: []
            button_action:
              tap_action:
                action: toggle
              hold_action:
                action: none
        exclude:
        - entity_id: light.living_room
      sort:
        method: friendly_name
  # Main Bedroom vertical stack
  - type: vertical-stack
    cards:
    # Main Bedroom: Room page (Control)
    - type: custom:bubble-card
      card_type: pop-up
      hash: '#main-bedroom-lights'
      name: Main Bedroom Lights
      icon: mdi:bed
      back_open: false
      close_by_clicking_outside: true
      bg_opacity: '88'
      bg_blur: '14'
      margin_top_mobile: '0'
      margin_top_desktop: '0'
      width_desktop: 540px
      is_sidebar_hidden: false
      auto_close: 60000
      show_header: true
      sub_button:
      - icon: mdi:tune
        name: Control
        tap_action:
          action: navigate
          navigation_path: '#main-bedroom-lights'
      - icon: mdi:palette
        name: Scenes
        tap_action:
          action: navigate
          navigation_path: '#main-bedroom-lights-scenes'
      - icon: mdi:lightbulb
        name: Lights
        tap_action:
          action: navigate
          navigation_path: '#main-bedroom-lights-lights'
    - type: custom:bubble-card
      card_type: separator
      name: Room Control
      icon: mdi:lightbulb-group
    - type: custom:bubble-card
      card_type: button
      button_type: slider
      entity: light.master_bedroom
      name: All Lights
      icon: mdi:lightbulb-group
      show_state: true
      show_attribute: true
      attribute: brightness
      slider_live_update: true
      allow_light_slider_to_0: true
      sub_button:
      - entity: light.master_bedroom
        icon: mdi:palette
        name: Color
        tap_action:
          action: more-info
      button_action:
        tap_action:
          action: toggle
        hold_action:
          action: none
  # Main Bedroom: Individual Lights popup
  - type: vertical-stack
    cards:
    - type: custom:bubble-card
      card_type: pop-up
      hash: '#main-bedroom-lights-lights'
      name: Main Bedroom Lights
      icon: mdi:bed
      back_open: false
      close_by_clicking_outside: true
      bg_opacity: '88'
      bg_blur: '14'
      margin_top_mobile: '0'
      margin_top_desktop: '0'
      width_desktop: 540px
      is_sidebar_hidden: false
      auto_close: 60000
      show_header: true
      sub_button:
      - icon: mdi:tune
        name: Control
        tap_action:
          action: navigate
          navigation_path: '#main-bedroom-lights'
      - icon: mdi:palette
        name: Scenes
        tap_action:
          action: navigate
          navigation_path: '#main-bedroom-lights-scenes'
      - icon: mdi:lightbulb
        name: Lights
        tap_action:
          action: navigate
          navigation_path: '#main-bedroom-lights-lights'
    - type: custom:bubble-card
      card_type: separator
      name: Individual Lights
      icon: mdi:lightbulb
    - type: custom:auto-entities
      card:
        type: vertical-stack
      card_param: cards
      filter:
        include:
        - entity_id: light.bedroom_ceiling_1
          options:
            type: custom:bubble-card
            card_type: button
            button_type: slider
            show_state: true
            show_attribute: true
            attribute: brightness
            slider_live_update: true
            allow_light_slider_to_0: true
            sub_button: []
            button_action:
              tap_action:
                action: toggle
              hold_action:
                action: none
        - entity_id: light.bedroom_ceiling_2
          options:
            type: custom:bubble-card
            card_type: button
            button_type: slider
            show_state: true
            show_attribute: true
            attribute: brightness
            slider_live_update: true
            allow_light_slider_to_0: true
            sub_button: []
            button_action:
              tap_action:
                action: toggle
              hold_action:
                action: none
        - entity_id: light.justin_bedside_table
          options:
            type: custom:bubble-card
            card_type: button
            button_type: slider
            show_state: true
            show_attribute: true
            attribute: brightness
            slider_live_update: true
            allow_light_slider_to_0: true
            sub_button: []
            button_action:
              tap_action:
                action: toggle
              hold_action:
                action: none
        - entity_id: light.josh_bedside_table
          options:
            type: custom:bubble-card
            card_type: button
            button_type: slider
            show_state: true
            show_attribute: true
            attribute: brightness
            slider_live_update: true
            allow_light_slider_to_0: true
            sub_button: []
            button_action:
              tap_action:
                action: toggle
              hold_action:
                action: none
      sort:
        method: friendly_name
  # Main Bedroom: Scenes popup
  - type: vertical-stack
    cards:
    - type: custom:bubble-card
      card_type: pop-up
      hash: '#main-bedroom-lights-scenes'
      name: Main Bedroom Lights
      icon: mdi:bed
      back_open: false
      close_by_clicking_outside: true
      bg_opacity: '88'
      bg_blur: '14'
      margin_top_mobile: '0'
      margin_top_desktop: '0'
      width_desktop: 540px
      is_sidebar_hidden: false
      auto_close: 60000
      show_header: true
      sub_button:
      - icon: mdi:tune
        name: Control
        tap_action:
          action: navigate
          navigation_path: '#main-bedroom-lights'
      - icon: mdi:palette
        name: Scenes
        tap_action:
          action: navigate
          navigation_path: '#main-bedroom-lights-scenes'
      - icon: mdi:lightbulb
        name: Lights
        tap_action:
          action: navigate
          navigation_path: '#main-bedroom-lights-lights'
    - type: custom:bubble-card
      card_type: separator
      name: Hue Scenes
      icon: mdi:palette
    - type: custom:auto-entities
      card:
        type: grid
        columns: 4
        square: false
      card_param: cards
      filter:
        template: |-
          {% set scenes = states.scene | selectattr('entity_id', 'match', 'scene.master_bedroom_') | list %}
          {% for scene in scenes | sort(attribute='attributes.friendly_name') %}
            {%- set scene_name = scene.attributes.friendly_name | replace('Master Bedroom ', '') | replace('Master bedroom ', '') | replace('Main Bedroom ', '') | replace('Main bedroom ', '') -%}
            {%- set icon_map = {
              'Heather': 'mdi:flower',
              'Read': 'mdi:book-open',
              'Chinatown': 'mdi:lantern',
              'Goodnight little lady': 'mdi:sleep',
              'Dimmed': 'mdi:brightness-3',
              'Bright': 'mdi:brightness-7',
              'Concentrate': 'mdi:target',
              'Energize': 'mdi:lightning-bolt',
              'Relax': 'mdi:spa',
              'Nightlight': 'mdi:weather-night',
              'Halloween': 'mdi:halloween',
              'Xmas': 'mdi:pine-tree',
              'Arctic aurora': 'mdi:aurora',
              'Spring blossom': 'mdi:flower',
              'Tropical twilight': 'mdi:palm-tree',
              'Savanna sunset': 'mdi:weather-sunset',
              'Nebula': 'mdi:creation',
              'Rainbow': 'mdi:looks',
              'Ibiza': 'mdi:party-popper',
              'Sweden': 'mdi:flag',
              'Sunday morning': 'mdi:coffee',
              'Champagne': 'mdi:glass-flute',
              'Lavender': 'mdi:flower-outline',
              'Peach': 'mdi:fruit-cherries',
              'Circle': 'mdi:circle',
              'Blue white': 'mdi:snowflake'
            } -%}
            {%- set icon = icon_map.get(scene_name, 'mdi:palette') -%}
            {
              "type": "custom:bubble-card",
              "card_type": "button",
              "button_type": "name",
              "name": "{{ scene_name }}",
              "icon": "{{ icon }}",
              "entity": "{{ scene.entity_id }}",
              "card_layout": "normal",
              "styles": "ha-card { height: 36px !important; } .bubble-container { height: 36px !important; } .bubble-name { font-size: 11px !important; } .bubble-icon-container { min-width: 28px !important; min-height: 28px !important; margin: 4px !important; } .bubble-icon { --mdc-icon-size: 18px !important; }",
              "button_action": {
                "tap_action": {
                  "action": "call-service",
                  "service": "scene.turn_on",
                  "service_data": {"entity_id": "{{ scene.entity_id }}"}
                }
              }
            }{%- if not loop.last -%},{%- endif -%}
          {% endfor %}
  - type: vertical-stack
    cards:
    - type: custom:bubble-card
      card_type: pop-up
      hash: '#dining-room-thermostat'
      name: Dining Room Thermostat
      icon: mdi:thermostat
      back_open: false
      close_by_clicking_outside: true
      bg_opacity: '88'
      bg_blur: '14'
      margin_top_mobile: '0'
      margin_top_desktop: '0'
      width_desktop: 540px
      is_sidebar_hidden: false
      auto_close: 60000
    - type: custom:bubble-card
      card_type: separator
      name: Climate Control
      icon: mdi:thermostat-box
    - type: thermostat
      entity: climate.my_ecobee
    - type: custom:bubble-card
      card_type: separator
      name: Environment
      icon: mdi:weather-partly-cloudy
    - type: custom:auto-entities
      card:
        type: entities
        state_color: true
      card_param: entities
      filter:
        include:
        - entity_id: sensor.my_ecobee_current_temperature
          options:
            name: Air Temperature
        - entity_id: sensor.my_ecobee_current_humidity
          options:
            name: Humidity
      show_empty: false
- title: Floor Plan
  sections:
  - type: grid
    cards:
    - type: picture-elements
      elements:
      - type: state-icon
        entity: light.master_bedroom
        icon: mdi:circle-opacity
        style:
          top: 77%
          left: 79%
          --paper-item-icon-color: |-
            {% if is_state('light.master_bedroom', 'on') %}{% if state_attr('light.master_bedroom', 'rgb_color') %}rgb({{ state_attr('light.master_bedroom', 'rgb_color')[0] }}, {{ state_attr('light.master_bedroom', 'rgb_color')[1] }}, {{ state_attr('light.master_bedroom', 'rgb_color')[2] }}){% else %}orange{% endif %}{% else %}rgba(128,128,128,0.1){% endif %}
          filter: blur(12px)
          transform: scale(4)
          opacity: |-
            {% if is_state('light.master_bedroom', 'on') %}{{ (state_attr('light.master_bedroom', 'brightness') | float / 255) if state_attr('light.master_bedroom', 'brightness') else 0.8 }}{% else %}0.1{% endif %}
          pointer-events: none
        tap_action:
          action: none
        hold_action:
          action: none
      - type: state-icon
        entity: light.josh_bedside_table
        style:
          top: 87%
          left: 94%
          --paper-item-icon-color: |-
            {% if is_state('light.josh_bedside_table', 'on') %}{% if state_attr('light.josh_bedside_table', 'rgb_color') %}rgb({{ state_attr('light.josh_bedside_table', 'rgb_color')[0] }}, {{ state_attr('light.josh_bedside_table', 'rgb_color')[1] }}, {{ state_attr('light.josh_bedside_table', 'rgb_color')[2] }}){% else %}orange{% endif %}{% else %}grey{% endif %}
        tap_action:
          action: toggle
      - type: state-icon
        entity: light.justin_bedside_table
        style:
          top: 75%
          left: 94%
          --paper-item-icon-color: |-
            {% if is_state('light.justin_bedside_table', 'on') %}{% if state_attr('light.justin_bedside_table', 'rgb_color') %}rgb({{ state_attr('light.justin_bedside_table', 'rgb_color')[0] }}, {{ state_attr('light.justin_bedside_table', 'rgb_color')[1] }}, {{ state_attr('light.justin_bedside_table', 'rgb_color')[2] }}){% else %}orange{% endif %}{% else %}grey{% endif %}
        tap_action:
          action: toggle
      - type: state-icon
        entity: light.bedroom_ceiling_1
        style:
          top: 79%
          left: 83%
          --paper-item-icon-color: |-
            {% if is_state('light.bedroom_ceiling_1', 'on') %}{% if state_attr('light.bedroom_ceiling_1', 'rgb_color') %}rgb({{ state_attr('light.bedroom_ceiling_1', 'rgb_color')[0] }}, {{ state_attr('light.bedroom_ceiling_1', 'rgb_color')[1] }}, {{ state_attr('light.bedroom_ceiling_1', 'rgb_color')[2] }}){% else %}orange{% endif %}{% else %}grey{% endif %}
        tap_action:
          action: toggle
      - type: state-icon
        entity: light.bedroom_ceiling_2
        style:
          top: 82%
          left: 83%
          --paper-item-icon-color: |-
            {% if is_state('light.bedroom_ceiling_2', 'on') %}{% if state_attr('light.bedroom_ceiling_2', 'rgb_color') %}rgb({{ state_attr('light.bedroom_ceiling_2', 'rgb_color')[0] }}, {{ state_attr('light.bedroom_ceiling_2', 'rgb_color')[1] }}, {{ state_attr('light.bedroom_ceiling_2', 'rgb_color')[2] }}){% else %}orange{% endif %}{% else %}grey{% endif %}
        tap_action:
          action: toggle
      - type: state-icon
        entity: light.living_room
        icon: mdi:circle-opacity
        style:
          top: 60%
          left: 30%
          --paper-item-icon-color: |-
            {% if is_state('light.living_room', 'on') %}{% if state_attr('light.living_room', 'rgb_color') %}rgb({{ state_attr('light.living_room', 'rgb_color')[0] }}, {{ state_attr('light.living_room', 'rgb_color')[1] }}, {{ state_attr('light.living_room', 'rgb_color')[2] }}){% else %}orange{% endif %}{% else %}rgba(128,128,128,0.1){% endif %}
          filter: blur(12px)
          transform: scale(5)
          opacity: |-
            {% if is_state('light.living_room', 'on') %}{{ 0.3 + ((state_attr('light.living_room', 'brightness') | float / 255) * 0.7) if state_attr('light.living_room', 'brightness') else 0.9 }}{% else %}0.1{% endif %}
          pointer-events: none
        tap_action:
          action: none
        hold_action:
          action: none
      - type: state-icon
        entity: light.living_room_left
        style:
          top: 60%
          left: 25%
          --paper-item-icon-color: |-
            {% if is_state('light.living_room_left', 'on') %}{% if state_attr('light.living_room_left', 'rgb_color') %}rgb({{ state_attr('light.living_room_left', 'rgb_color')[0] }}, {{ state_attr('light.living_room_left', 'rgb_color')[1] }}, {{ state_attr('light.living_room_left', 'rgb_color')[2] }}){% else %}orange{% endif %}{% else %}grey{% endif %}
          filter: |-
            {% if is_state('light.living_room_left', 'on') %}drop-shadow(0 0 8px currentColor){% else %}none{% endif %}
        tap_action:
          action: toggle
      - type: state-icon
        entity: light.living_room_right
        style:
          top: 60%
          left: 35%
          --paper-item-icon-color: |-
            {% if is_state('light.living_room_right', 'on') %}{% if state_attr('light.living_room_right', 'rgb_color') %}rgb({{ state_attr('light.living_room_right', 'rgb_color')[0] }}, {{ state_attr('light.living_room_right', 'rgb_color')[1] }}, {{ state_attr('light.living_room_right', 'rgb_color')[2] }}){% else %}orange{% endif %}{% else %}grey{% endif %}
          filter: |-
            {% if is_state('light.living_room_right', 'on') %}drop-shadow(0 0 8px currentColor){% else %}none{% endif %}
        tap_action:
          action: toggle
      - type: state-icon
        entity: light.living_room_lamp
        style:
          top: 55%
          left: 20%
          --paper-item-icon-color: |-
            {% if is_state('light.living_room_lamp', 'on') %}{% if state_attr('light.living_room_lamp', 'rgb_color') %}rgb({{ state_attr('light.living_room_lamp', 'rgb_color')[0] }}, {{ state_attr('light.living_room_lamp', 'rgb_color')[1] }}, {{ state_attr('light.living_room_lamp', 'rgb_color')[2] }}){% else %}orange{% endif %}{% else %}grey{% endif %}
        tap_action:
          action: toggle
      - type: state-icon
        entity: light.play_gradient_tube
        icon: mdi:television-ambient-light
        style:
          top: 65%
          left: 30%
          --paper-item-icon-color: |-
            {% if is_state('light.play_gradient_tube', 'on') %}{% if state_attr('light.play_gradient_tube', 'rgb_color') %}rgb({{ state_attr('light.play_gradient_tube', 'rgb_color')[0] }}, {{ state_attr('light.play_gradient_tube', 'rgb_color')[1] }}, {{ state_attr('light.play_gradient_tube', 'rgb_color')[2] }}){% else %}orange{% endif %}{% else %}grey{% endif %}
          filter: |-
            {% if is_state('light.play_gradient_tube', 'on') %}drop-shadow(0 0 15px currentColor){% else %}none{% endif %}
        tap_action:
          action: toggle
        hold_action:
          action: more-info
      - type: state-icon
        entity: light.signe_gradient_floor
        icon: mdi:floor-lamp
        style:
          top: 58%
          left: 38%
          --paper-item-icon-color: |-
            {% if is_state('light.signe_gradient_floor', 'on') %}{% if state_attr('light.signe_gradient_floor', 'rgb_color') %}rgb({{ state_attr('light.signe_gradient_floor', 'rgb_color')[0] }}, {{ state_attr('light.signe_gradient_floor', 'rgb_color')[1] }}, {{ state_attr('light.signe_gradient_floor', 'rgb_color')[2] }}){% else %}orange{% endif %}{% else %}grey{% endif %}
          filter: |-
            {% if is_state('light.signe_gradient_floor', 'on') %}drop-shadow(0 0 12px currentColor){% else %}none{% endif %}
        tap_action:
          action: toggle
      image: /local/floorplan/interior.png
      grid_options:
        columns: full
        rows: full
      dark_mode_image: /local/floorplan/interior.png
    column_span: 2
  - type: grid
    cards:
    - type: picture-elements
      elements: []
      image: /local/floorplan/outside.png
      dark_mode_image: /local/floorplan/outside.png
      grid_options:
        columns: full
        rows: full
    column_span: 2
  path: floor-plan
- title: Map
  path: map
  strategy:
    type: map
